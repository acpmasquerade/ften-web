{"version":3,"sources":["webpack:///./src/pages/lib/fountain.js"],"names":["regex","title_page","scene_heading","scene_number","transition","dialogue","parenthetical","action","centered","section","synopsis","note","note_inline","boneyard","page_break","line_break","emphasis","bold_italic_underline","bold_underline","italic_underline","bold_italic","bold","italic","underline","splitter","cleaner","standardizer","whitespacer","tokenize","script","line","match","parts","text","meta","x","xlen","dual","src","replace","lexer","split","i","length","tokens","test","reverse","push","type","trim","toLowerCase","indexOf","undefined","depth","fountain","callback","parse","toks","token","title","output","title_info","html","updateTitleInfo","key","value","join","module","exports","call","this"],"mappings":"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","file":"component---src-pages-lib-fountain-js-24dbbdad132b08eb2f9d.js","sourcesContent":["// fountain-js 0.1.10\n// http://www.opensource.org/licenses/mit-license.php\n// Copyright (c) 2012 Matt Daly\n\n/* eslint-disable */\n\n(function() {\n   \n  var regex = {\n    title_page: /^((?:title|credit|author[s]?|source|notes|draft date|date|contact|copyright)\\:)/gim,\n\n    scene_heading: /^((?:\\*{0,3}_?)?(?:(?:int|ext|est|i\\/e)[. ]).+)|^(?:\\.(?!\\.+))(.+)/i,\n    scene_number: /( *#(.+)# *)/,\n\n    transition: /^((?:FADE (?:TO BLACK|OUT)|CUT TO BLACK)\\.|.+ TO\\:)|^(?:> *)(.+)/,\n    \n    dialogue: /^([A-Z*_]+[0-9A-Z (._\\-')]*)(\\^?)?(?:\\n(?!\\n+))([\\s\\S]+)/,\n    parenthetical: /^(\\(.+\\))$/,\n\n    action: /^(.+)/g,\n    centered: /^(?:> *)(.+)(?: *<)(\\n.+)*/g,\n        \n    section: /^(#+)(?: *)(.*)/,\n    synopsis: /^(?:\\=(?!\\=+) *)(.*)/,\n\n    note: /^(?:\\[{2}(?!\\[+))(.+)(?:\\]{2}(?!\\[+))$/,\n    note_inline: /(?:\\[{2}(?!\\[+))([\\s\\S]+?)(?:\\]{2}(?!\\[+))/g,\n    boneyard: /(^\\/\\*|^\\*\\/)$/g,\n\n    page_break: /^\\={3,}$/,\n    line_break: /^ {2}$/,\n\n    emphasis: /(_|\\*{1,3}|_\\*{1,3}|\\*{1,3}_)(.+)(_|\\*{1,3}|_\\*{1,3}|\\*{1,3}_)/g,\n    bold_italic_underline: /(_{1}\\*{3}(?=.+\\*{3}_{1})|\\*{3}_{1}(?=.+_{1}\\*{3}))(.+?)(\\*{3}_{1}|_{1}\\*{3})/g,\n    bold_underline: /(_{1}\\*{2}(?=.+\\*{2}_{1})|\\*{2}_{1}(?=.+_{1}\\*{2}))(.+?)(\\*{2}_{1}|_{1}\\*{2})/g,\n    italic_underline: /(?:_{1}\\*{1}(?=.+\\*{1}_{1})|\\*{1}_{1}(?=.+_{1}\\*{1}))(.+?)(\\*{1}_{1}|_{1}\\*{1})/g,\n    bold_italic: /(\\*{3}(?=.+\\*{3}))(.+?)(\\*{3})/g,\n    bold: /(\\*{2}(?=.+\\*{2}))(.+?)(\\*{2})/g,\n    italic: /(\\*{1}(?=.+\\*{1}))(.+?)(\\*{1})/g,\n    underline: /(_{1}(?=.+_{1}))(.+?)(_{1})/g,\n\n    splitter: /\\n{2,}/g,\n    cleaner: /^\\n+|\\n+$/,\n    standardizer: /\\r\\n|\\r/g,\n    whitespacer: /^\\t+|^ {3,}/gm\n  };\n\n  var lexer = function (script) {\n    return script.replace(regex.boneyard, '\\n$1\\n')\n                 .replace(regex.standardizer, '\\n')\n                 .replace(regex.cleaner, '')\n                 .replace(regex.whitespacer, '');\n  };\n     \n  var tokenize = function (script) {\n    var src    = lexer(script).split(regex.splitter)\n      , i      = src.length, line, match, parts, text, meta, x, xlen, dual\n      , tokens = [];\n\n    while (i--) {\n      line = src[i];\n      \n      // title page\n      if (regex.title_page.test(line)) {\n        match = line.replace(regex.title_page, '\\n$1').split(regex.splitter).reverse();\n        for (x = 0, xlen = match.length; x < xlen; x++) {\n          parts = match[x].replace(regex.cleaner, '').split(/\\:\\n*/);\n          tokens.push({ type: parts[0].trim().toLowerCase().replace(' ', '_'), text: parts[1].trim() });\n        }\n        continue;\n      }\n\n      // scene headings\n      if (match = line.match(regex.scene_heading)) {\n        text = match[1] || match[2];\n\n        if (text.indexOf('  ') !== text.length - 2) {\n          if (meta = text.match(regex.scene_number)) {\n            meta = meta[2];\n            text = text.replace(regex.scene_number, '');\n          }\n          tokens.push({ type: 'scene_heading', text: text, scene_number: meta || undefined });\n        }\n        continue;\n      }\n\n      // centered\n      if (match = line.match(regex.centered)) {\n        tokens.push({ type: 'centered', text: match[0].replace(/>|</g, '') });\n        continue;\n      }\n\n      // transitions\n      if (match = line.match(regex.transition)) {\n        tokens.push({ type: 'transition', text: match[1] || match[2] });\n        continue;\n      }\n    \n      // dialogue blocks - characters, parentheticals and dialogue\n      if (match = line.match(regex.dialogue)) {\n        if (match[1].indexOf('  ') !== match[1].length - 2) {\n          // we're iterating from the bottom up, so we need to push these backwards\n          if (match[2]) {\n            tokens.push({ type: 'dual_dialogue_end' });\n          }\n\n          tokens.push({ type: 'dialogue_end' });\n\n          parts = match[3].split(/(\\(.+\\))(?:\\n+)/).reverse();\n\n          for (x = 0, xlen = parts.length; x < xlen; x++) {\t\n            text = parts[x];\n\n            if (text.length > 0) {               \n              tokens.push({ type: regex.parenthetical.test(text) ? 'parenthetical' : 'dialogue', text: text });\n            }\n          }\n\n          tokens.push({ type: 'character', text: match[1].trim() });\n          tokens.push({ type: 'dialogue_begin', dual: match[2] ? 'right' : dual ? 'left' : undefined });\n\n          if (dual) {\n            tokens.push({ type: 'dual_dialogue_begin' });\n          }\n\n          dual = match[2] ? true : false;\n          continue;\n        }\n      }\n      \n      // section\n      if (match = line.match(regex.section)) {\n        tokens.push({ type: 'section', text: match[2], depth: match[1].length });\n        continue;\n      }\n      \n      // synopsis\n      if (match = line.match(regex.synopsis)) {\n        tokens.push({ type: 'synopsis', text: match[1] });\n        continue;\n      }\n\n      // notes\n      if (match = line.match(regex.note)) {\n        tokens.push({ type: 'note', text: match[1]});\n        continue;\n      }      \n\n      // boneyard\n      if (match = line.match(regex.boneyard)) {\n        tokens.push({ type: match[0][0] === '/' ? 'boneyard_begin' : 'boneyard_end' });\n        continue;\n      }      \n\n      // page breaks\n      if (regex.page_break.test(line)) {\n        tokens.push({ type: 'page_break' });\n        continue;\n      }\n      \n      // line breaks\n      if (regex.line_break.test(line)) {\n        tokens.push({ type: 'line_break' });\n        continue;\n      }\n\n      tokens.push({ type: 'action', text: line });\n    }\n    return tokens;\n  };\n\n  var inline = {\n    note: '<!-- $1 -->',\n\n    line_break: '<br />',\n\n    bold_italic_underline: '<span class=\\\"bold italic underline\\\">$2</span>',\n    bold_underline: '<span class=\\\"bold underline\\\">$2</span>',\n    italic_underline: '<span class=\\\"italic underline\\\">$2</span>',\n    bold_italic: '<span class=\\\"bold italic\\\">$2</span>',\n    bold: '<span class=\\\"bold\\\">$2</span>',\n    italic: '<span class=\\\"italic\\\">$2</span>',\n    underline: '<span class=\\\"underline\\\">$2</span>'\n  };\n\n  inline.lexer = function (s) {\n    if (!s) {\n      return;\n    }  \n\n    var styles = [ 'underline', 'italic', 'bold', 'bold_italic', 'italic_underline', 'bold_underline', 'bold_italic_underline' ]\n           , i = styles.length, style, match;\n\n    s = s.replace(regex.note_inline, inline.note).replace(/\\\\\\*/g, '[star]').replace(/\\\\_/g, '[underline]').replace(/\\n/g, inline.line_break);\n\n   // if (regex.emphasis.test(s)) {                         // this was causing only every other occurence of an emphasis syntax to be parsed\n      while (i--) {\n        style = styles[i];\n        match = regex[style];\n   \n        if (match.test(s)) {\n          s = s.replace(match, inline[style]);\n        }\n      }\n   // }\n\n    return s.replace(/\\[star\\]/g, '*').replace(/\\[underline\\]/g, '_').trim();\n  };\n\n  var parse = function (script, toks, callback) {\n    if (callback === undefined && typeof toks === 'function') {\n      callback = toks;\n      toks = undefined;\n    }\n\n      \n    var tokens = tokenize(script)\n      , i      = tokens.length, token, title_info = {}\n      , title, title_page = [], html = [], output;\n\n    function updateTitleInfo(key, value) {\n      title_info[key] = value;\n    }\n\n    while (i--) {\n      token = tokens[i];\n      // token.text = inline.lexer(token.text);\n\n      switch (token.type) {\n        case 'title': \n          updateTitleInfo(token.type, token.text);\n          title_page.push('<h1>' + token.text + '</h1>'); \n          title = token.text.replace('<br />', ' ').replace(/<(?:.|\\n)*?>/g, ''); \n          break;\n        case 'credit': updateTitleInfo(token.type, token.text);title_page.push('<p class=\\\"credit\\\">' + token.text + '</p>'); break;\n        case 'author': updateTitleInfo(token.type, token.text);title_page.push('<p class=\\\"authors\\\">' + token.text + '</p>'); break;\n        case 'authors': updateTitleInfo(token.type, token.text);title_page.push('<p class=\\\"authors\\\">' + token.text + '</p>'); break;\n        case 'source': updateTitleInfo(token.type, token.text);title_page.push('<p class=\\\"source\\\">' + token.text + '</p>'); break;\n        case 'notes': updateTitleInfo(token.type, token.text);title_page.push('<p class=\\\"notes\\\">' + token.text + '</p>'); break;\n        case 'draft_date': updateTitleInfo(token.type, token.text);title_page.push('<p class=\\\"draft-date\\\">' + token.text + '</p>'); break;\n        case 'date': updateTitleInfo(token.type, token.text);title_page.push('<p class=\\\"date\\\">' + token.text + '</p>'); break;\n        case 'contact': updateTitleInfo(token.type, token.text);title_page.push('<p class=\\\"contact\\\">' + token.text + '</p>'); break;\n        case 'copyright': updateTitleInfo(token.type, token.text);title_page.push('<p class=\\\"copyright\\\">' + token.text + '</p>'); break;\n\n        case 'scene_heading': html.push('<h3' + (token.scene_number ? ' id=\\\"' + token.scene_number + '\\\">' : '>') + token.text + '</h3>'); break;\n        case 'transition': html.push('<h2>' + token.text + '</h2>'); break;\n\n        case 'dual_dialogue_begin': html.push('<div class=\\\"dual-dialogue\\\">'); break;\n        case 'dialogue_begin': html.push('<div class=\\\"dialogue' + (token.dual ? ' ' + token.dual : '') + '\\\">'); break;\n        case 'character': html.push('<h4>' + token.text + '</h4>'); break;\n        case 'parenthetical': html.push('<p class=\\\"parenthetical\\\">' + token.text + '</p>'); break;\n        case 'dialogue': html.push('<p>' + token.text + '</p>'); break;\n        case 'dialogue_end': html.push('</div> '); break;\n        case 'dual_dialogue_end': html.push('</div> '); break;\n\n        case 'section': html.push('<p class=\\\"section\\\" data-depth=\\\"' + token.depth + '\\\">' + token.text + '</p>'); break;\n        case 'synopsis': html.push('<p class=\\\"synopsis\\\">' + token.text + '</p>'); break;\n\n        case 'note': html.push('<!-- ' + token.text + '-->'); break;\n        case 'boneyard_begin': html.push('<!-- '); break;\n        case 'boneyard_end': html.push(' -->'); break;\n\n        case 'action': html.push('<p>' + token.text + '</p>'); break;\n        case 'centered': html.push('<p class=\\\"centered\\\">' + token.text + '</p>'); break;\n        \n        case 'page_break': html.push('<hr />'); break;\n        case 'line_break': html.push('<br />'); break;\n      }\n    }\n\n    output = { title: title, title_info: title_info, html: { title_page: title_page.join(''), script: html.join('') }, tokens: toks ? tokens.reverse() : undefined };\n\n\n    if (typeof callback === 'function') {\n      return callback(output);\n    }\n\n    return output;\n  };\n\n  var fountain = function (script, callback) {\n    return fountain.parse(script, callback);\n  };\n    \n  fountain.parse = function (script, tokens, callback) {\n    return parse(script, tokens, callback);\n  };\n\n  fountain.regex = regex;\n\n  if (typeof module !== 'undefined') {\n    module.exports = fountain;\n  } else {\n    this.fountain = fountain;\n  }  \n}).call(this);\n"],"sourceRoot":""}