{"version":3,"sources":["webpack:///./src/pages/components/click_to_edit.js"],"names":["ClickToEdit","props","_this","_React$Component","call","this","enableEditMode","setState","editEnabled","disableEditMode","onBlur","e","onEditEnd","input","current","value","handleEnterKey","keyCode","charCode","state","React","createRef","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0___default","render","displayValue","length","maxLength","substring","element","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","ref","className","inputClass","type","defaultValue","autoFocus","onKeyPress","textClass","containerClass","onClick","Component"],"mappings":"4LAEqBA,cAEnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAWFC,eAAiB,WACfJ,EAAKK,SAAS,CAAEC,aAAa,KAbZN,EAgBnBO,gBAAkB,WAChBP,EAAKK,SAAS,CAAEC,aAAa,KAjBZN,EAoBnBQ,OAAS,SAACC,GACRT,EAAKO,kBAEDP,EAAKD,MAAMW,WACbV,EAAKD,MAAMW,UAAUV,EAAKW,MAAMC,QAAQC,QAxBzBb,EA4BnBc,eAAiB,SAACL,GACE,KAAdA,EAAEM,SAAiC,KAAfN,EAAEO,UACxBhB,EAAKO,kBAGHP,EAAKD,MAAMW,WACbV,EAAKD,MAAMW,UAAUV,EAAKW,MAAMC,QAAQC,QA/B1Cb,EAAKiB,MAAQ,CACXX,aAAa,GAGfN,EAAKW,MAAQO,IAAMC,YACnBnB,EAAKI,eAAiBJ,EAAKI,eAAegB,KAApBC,IAAArB,IACtBA,EAAKO,gBAAkBP,EAAKO,gBAAgBa,KAArBC,IAAArB,IATNA,8BAsCnBsB,OAAA,WACE,IAAIC,EAAgBpB,KAAKJ,MAAMc,OAASV,KAAKJ,MAAMc,MAAMW,OAASrB,KAAKJ,MAAM0B,UACzEtB,KAAKJ,MAAMc,MAAMa,UAAU,EAAEvB,KAAKJ,MAAM0B,WAAW,MACnDtB,KAAKJ,MAAMc,MAEXc,EAAUxB,KAAKc,MAAMX,YACvBsB,EAAAC,EAAAC,cAAA,SACEC,IAAK5B,KAAKQ,MACVqB,UAAW7B,KAAKJ,MAAMkC,WACtBC,KAAK,OACLC,aAAchC,KAAKJ,MAAMc,MACzBuB,WAAS,EACT5B,OAAQL,KAAKK,OACb6B,WAAYlC,KAAKW,iBACnBc,EAAAC,EAAAC,cAAA,QAAME,UAAW7B,KAAKJ,MAAMuC,WACxBf,GAGN,OAAOK,EAAAC,EAAAC,cAAA,OAAKE,UAAW7B,KAAKJ,MAAMwC,eAAgBC,QAASrC,KAAKC,gBAC7DuB,OA3DkCT,IAAMuB","file":"component---src-pages-components-click-to-edit-js-0b6a739d13d374b10a1c.js","sourcesContent":["import React from \"react\"\n\nexport default class ClickToEdit extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editEnabled: false\n    }\n\n    this.input = React.createRef();\n    this.enableEditMode = this.enableEditMode.bind(this)\n    this.disableEditMode = this.disableEditMode.bind(this)\n  }\n\n  enableEditMode = () => {\n    this.setState({ editEnabled: true })\n  }\n\n  disableEditMode = () => {\n    this.setState({ editEnabled: false })\n  }\n\n  onBlur = (e) => {\n    this.disableEditMode()\n\n    if (this.props.onEditEnd) {\n      this.props.onEditEnd(this.input.current.value)\n    }\n  }\n\n  handleEnterKey = (e) => {\n    if (e.keyCode === 13 || e.charCode === 13) {\n      this.disableEditMode()\n    };\n\n    if (this.props.onEditEnd) {\n      this.props.onEditEnd(this.input.current.value)\n    }\n  }\n\n  render() {\n    let displayValue = (this.props.value && this.props.value.length > this.props.maxLength) ?\n        this.props.value.substring(0,this.props.maxLength)+\"...\" : \n        this.props.value\n\n    let element = this.state.editEnabled ?\n      <input\n        ref={this.input}\n        className={this.props.inputClass}\n        type=\"text\"\n        defaultValue={this.props.value}\n        autoFocus\n        onBlur={this.onBlur}\n        onKeyPress={this.handleEnterKey} /> :\n      <span className={this.props.textClass}>\n        { displayValue} \n      </span>\n\n    return <div className={this.props.containerClass} onClick={this.enableEditMode}>\n      {element}\n    </div>\n  }\n}\n"],"sourceRoot":""}