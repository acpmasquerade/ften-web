{"version":3,"sources":["webpack:///./src/pages/lib/fountain-fold.js","webpack:///./src/pages/components/editor.js","webpack:///./src/pages/components/click_to_edit.js","webpack:///./src/pages/lib/fountain-mode.js","webpack:///./src/pages/container/view_container.js"],"names":["fountainFoldFn","cm","start","maxDepth","isSection","lineNo","tokentype","getTokenTypeAt","CodeMirror","res","test","sectionLevel","line","nextLine","match","length","sceneHeading","firstLine","getLine","lastLineNo","lastLine","end","nextNextLine","from","to","level","require","newFile","EditorToolbarBtn","onClick","imgSrc","altText","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","src","width","alt","mode","name","fn","fountainModeFn","codeMirrorOptions","foldGutter","gutters","lineNumbers","theme","lineWrapping","extraKeys","Ctrl-Q","foldCode","getCursor","Shift-Ctrl-F","eachLine","lh","Editor","props","_this","_React$Component","call","this","download","editorInstance","value","getValue","fileName","file","blob","Blob","type","saveAs","onError","saveToDropbox","onDropboxSave","transliterate","transMenu","onTransliteration","selectedScheme","generatePdf","onPreview","generateIndianPdf","handleTransSelection","onSelection","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0___default","render","_this2","console","log","downloadBtn","pdfBtn","pdfIndianBtn","transBtn","dropboxBtn","style","display","react_select__WEBPACK_IMPORTED_MODULE_6__","onChange","options","_click_to_edit_js__WEBPACK_IMPORTED_MODULE_4__","onEditEnd","v","onFileNameChange","maxLength","containerClass","inputClass","textClass","react_codemirror2__WEBPACK_IMPORTED_MODULE_5__","defineMode","editorDidMount","editor","content","onBeforeChange","data","React","Component","ClickToEdit","enableEditMode","setState","editEnabled","disableEditMode","onBlur","e","input","current","handleEnterKey","keyCode","charCode","state","createRef","displayValue","substring","element","ref","defaultValue","autoFocus","onKeyPress","SCENE_HEADING","TRANSITION","CHARACTER","PARENTHETICAL","CENTERED_TEXT","SECTION","ITALICS","BOLD","BOLD_ITALICS","UNDERLINE","editorConf","config_","isNextLineBlank","stream","lookAhead","CM","startState","blankLine","character","parenthetical","token","skipToEnd","dialog","next","ViewContainer","react__WEBPACK_IMPORTED_MODULE_1___default","_components_editor_js__WEBPACK_IMPORTED_MODULE_2__","onInfo"],"mappings":"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","file":"component---src-pages-container-view-container-js-a990bcc630439a611e75.js","sourcesContent":["import * as CodeMirror from 'codemirror';\n\nexport default function fountainFoldFn(cm, start) {\n  const maxDepth = 100;\n\n  function isSection(lineNo) {\n    const tokentype = cm.getTokenTypeAt(CodeMirror.Pos(lineNo, 0));\n    const res = /\\bsection\\b/.test(tokentype);\n    return tokentype && res;\n  }\n\n  function sectionLevel(lineNo, line, nextLine) {\n    const match = line && line.match(/^#+/);\n    if (match && isSection(lineNo)) return match[0].length;\n    // match = nextLine && nextLine.match(/^[=\\-]+\\s*$/);\n    // if (match && isSection(lineNo + 1)) return nextLine[0] === '=' ? 1 : 2;\n    return maxDepth;\n  }\n\n  function sceneHeading(lineNo, line) {\n    const SCENE_HEADING = /(^\\.[\\w]+.+)|(?:(?:^int|ext|est|int\\.ext|int\\/ext|i\\/e)[. ].+)$/i;\n    return line && SCENE_HEADING.test(line);\n  }\n\n  const firstLine = cm.getLine(start.line);\n  let nextLine = cm.getLine(start.line + 1);\n  // sceneHeading folding\n  if (sceneHeading(start.line, firstLine)) {\n    const lastLineNo = cm.lastLine();\n    let end = start.line;\n    let nextNextLine = cm.getLine(end + 2);\n\n    while (end < lastLineNo) {\n      if (sceneHeading(end + 1, nextLine) || isSection(end + 1)) break;\n\n      ++end;\n      nextLine = nextNextLine;\n      nextNextLine = cm.getLine(end + 2);\n    }\n    // console.log(`fold from ${start.line} to ${end}`);\n    return {\n      from: CodeMirror.Pos(start.line, firstLine.length),\n      to: CodeMirror.Pos(end, cm.getLine(end).length)\n    };\n  }\n\n  const level = sectionLevel(start.line, firstLine, nextLine);\n  if (level === maxDepth) return undefined;\n\n  // Follow markdown header-level folding rules\n  const lastLineNo = cm.lastLine();\n  let end = start.line;\n  let nextNextLine = cm.getLine(end + 2);\n  while (end < lastLineNo) {\n    if (sectionLevel(end + 1, nextLine, nextNextLine) <= level) break;\n    ++end;\n    nextLine = nextNextLine;\n    nextNextLine = cm.getLine(end + 2);\n  }\n\n  return {    \n    from: CodeMirror.Pos(start.line, firstLine.length),\n    to: CodeMirror.Pos(end, cm.getLine(end).length)\n  };\n}\n","import React from \"react\"\nimport { saveAs } from 'file-saver';\nimport ClickToEdit from './click_to_edit.js';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport Select from 'react-select';\nimport fountainModeFn from '../lib/fountain-mode';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/addon/fold/foldgutter.css';\nimport '../../styles/editor.css' \nrequire('codemirror/addon/fold/foldcode.js');\nrequire('codemirror/addon/fold/foldgutter.js');\nrequire('codemirror/addon/search/search.js');\nrequire('codemirror/addon/search/searchcursor.js');\nrequire('codemirror/addon/dialog/dialog.js');\n\nconst newFile = 'newfile.fountain'\n\nconst EditorToolbarBtn = (onClick, imgSrc, altText) => {\n  return (\n    <button className=\"editor__toolbar__btn\" onClick={onClick}>\n      <img src={imgSrc} width=\"24px\" alt={altText} />\n    </button>)\n}\n\nconst mode = {\n  name: 'fountain',\n  fn: fountainModeFn\n};\n\nconst codeMirrorOptions = {\n  foldGutter: true,\n  gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter'],\n  lineNumbers: true,\n  theme: 'material',\n  mode: 'fountain',\n  lineWrapping: true,\n  extraKeys: {\n    'Ctrl-Q': (cm) => { cm.foldCode(cm.getCursor()); },\n    'Shift-Ctrl-F': (cm) => {\n      cm.eachLine((lh) => {\n        cm.foldCode(lh.lineNo());\n      });\n    }\n  }\n};\n\nexport default class Editor extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.editorInstance = null;\n\n    this.transliterate = this.transliterate.bind(this)\n    this.download = this.download.bind(this)\n    this.generatePdf = this.generatePdf.bind(this)\n    this.handleTransSelection = this.handleTransSelection.bind(this)\n    this.saveToDropbox = this.saveToDropbox.bind(this)\n  }\n\n  download = () => {\n    if (this.editorInstance) {\n      let value = this.editorInstance.getValue();\n      let fileName = this.props.file || newFile;\n      var blob = new Blob([value], { type: \"text/plain;charset=utf-8\" });\n      saveAs(blob, fileName);\n    }\n    else {\n      this.props.onError('editorInstance not loaded!');\n    }\n  }\n\n  saveToDropbox = () => {\n    if (this.editorInstance) {\n      let value = this.editorInstance.getValue();\n      this.props.onDropboxSave(this.props.file, value)\n    }\n    else {\n      this.props.onError('editorInstance not loaded!');\n    }\n  }\n\n  transliterate = () => {\n    if (this.editorInstance) {\n      let value = this.editorInstance.getValue();\n      this.props.transMenu.onTransliteration(value, this.props.transMenu.selectedScheme)\n    }\n    else {\n      this.props.onError('editorInstance not loaded!');\n    }\n  }\n\n  generatePdf = () => {\n    if (this.editorInstance) {\n      let value = this.editorInstance.getValue();\n      this.props.onPreview(value, false)\n    }\n    else {\n      this.props.onError('editorInstance not loaded!');\n    }\n  }\n\n  generateIndianPdf = () => {\n    if (this.editorInstance) {\n      let value = this.editorInstance.getValue();\n      this.props.onPreview(value, true)\n    }\n    else {\n      this.props.onError('editorInstance not loaded!');\n    }\n  }\n\n  handleTransSelection = (selectedScheme) => {     \n    this.props.transMenu.onSelection(selectedScheme)     \n  }\n\n  render() {\n    console.log('editor render')\n\n    let fileName = this.props.file || newFile;\n    let downloadBtn = EditorToolbarBtn(this.download, \"gfx/icons/download.svg\", \"downloand\")\n    let pdfBtn = EditorToolbarBtn(this.generatePdf, \"gfx/icons/pdf.svg\", \"pdf\")\n    let pdfIndianBtn = EditorToolbarBtn(this.generateIndianPdf, \"gfx/icons/indian.svg\", \"pdf\")\n    let transBtn = EditorToolbarBtn(this.transliterate, \"gfx/icons/arrow.svg\", \"Transliterate\")\n    let dropboxBtn = EditorToolbarBtn(this.saveToDropbox, \"gfx/icons/dropbox.svg\", \"Dropbox\")\n\n    let transMenu = (this.props.transMenu) ?\n      <div style={{ display: 'inline-block' }}>\n        <Select\n          className=\"transmenu\"\n          value={this.props.transMenu.selectedScheme}\n          onChange={this.handleTransSelection}\n          options={this.props.transMenu.options}\n        />\n        {transBtn}\n      </div>\n      : null\n\n    return (<div className=\"editor\" style={this.props.style}>\n      <div className=\"editor__toolbar\">\n        <ClickToEdit\n          onEditEnd= { (v) => {this.props.onFileNameChange(v)} }\n          maxLength=\"20\"\n          containerClass=\"input-container\"\n          inputClass=\"input-class\"\n          textClass=\"text-class\"\n          value={fileName} />\n        {transMenu}\n        {downloadBtn}\n        {dropboxBtn}\n        {pdfBtn}\n        {pdfIndianBtn}\n      </div>      \n      <CodeMirror\n        defineMode={mode}\n        editorDidMount={(editor) => { this.editorInstance = editor }}\n        value={this.props.content}\n        options={codeMirrorOptions}\n        onBeforeChange={\n          (editor, data, value) => !!this.props.content && this.props.onChange(value)}\n        onChange={(editor, data, value) => {\n        }}\n      />\n    </div>\n    )\n  }\n}\n","import React from \"react\"\n\nexport default class ClickToEdit extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editEnabled: false\n    }\n\n    this.input = React.createRef();\n    this.enableEditMode = this.enableEditMode.bind(this)\n    this.disableEditMode = this.disableEditMode.bind(this)\n  }\n\n  enableEditMode = () => {\n    this.setState({ editEnabled: true })\n  }\n\n  disableEditMode = () => {\n    this.setState({ editEnabled: false })\n  }\n\n  onBlur = (e) => {\n    this.disableEditMode()\n\n    if (this.props.onEditEnd) {\n      this.props.onEditEnd(this.input.current.value)\n    }\n  }\n\n  handleEnterKey = (e) => {\n    if (e.keyCode === 13 || e.charCode === 13) {\n      this.disableEditMode()\n    };\n\n    if (this.props.onEditEnd) {\n      this.props.onEditEnd(this.input.current.value)\n    }\n  }\n\n  render() {\n    let displayValue = (this.props.value && this.props.value.length > this.props.maxLength) ?\n        this.props.value.substring(0,this.props.maxLength)+\"...\" : \n        this.props.value\n\n    let element = this.state.editEnabled ?\n      <input\n        ref={this.input}\n        className={this.props.inputClass}\n        type=\"text\"\n        defaultValue={this.props.value}\n        autoFocus\n        onBlur={this.onBlur}\n        onKeyPress={this.handleEnterKey} /> :\n      <span className={this.props.textClass}>\n        { displayValue} \n      </span>\n\n    return <div className={this.props.containerClass} onClick={this.enableEditMode}>\n      {element}\n    </div>\n  }\n}\n","import * as CM from 'codemirror';\nimport fountainFoldFn from './fountain-fold';\n\nconst SCENE_HEADING = /(^\\.[\\w]+.+)|(?:(?:^int|ext|est|int\\.ext|int\\/ext|i\\/e)[. ].+)$/i;\nconst TRANSITION = /^[A-Z\\s]+TO:$/;\nconst CHARACTER = /^['A-Z\\s\\d]+(\\s*\\(.+\\)\\s*)*$/;\nconst PARENTHETICAL = /^\\s*\\(.+\\)\\s*$/;\nconst CENTERED_TEXT = /^>(.+)<$/;\nconst SECTION = /^#+/;\nconst ITALICS = /^\\*(.+)\\*$/;\nconst BOLD = /^\\*\\*(.+)\\*\\*$/;\nconst BOLD_ITALICS = /^\\*\\*\\*(.+)\\*\\*\\*$/;\nconst UNDERLINE = /^_(.+)_$/;\n\nexport default function fountainModeFn(editorConf, config_) {\n  CM.registerHelper('fold', 'fountain', fountainFoldFn);\n  function startState() {\n    console.log('startState');\n    const state = {\n      blankLine: false,\n      character: false,\n      parenthetical: false\n    };\n    return state;\n  }\n\n  function isNextLineBlank(stream) {\n    const nextLine = stream.lookAhead(1);\n    return (!nextLine || nextLine === '');\n  }\n\n  function token(stream, state) {\n    console.log('token');\n\n    if (stream.match(ITALICS)) {\n      stream.skipToEnd();\n      return 'em';\n    }\n\n    if (stream.match(BOLD)) {\n      stream.skipToEnd();\n      return 'strong';\n    }\n\n    if (stream.match(BOLD_ITALICS)) {\n      stream.skipToEnd();\n      return 'em strong';\n    }\n\n    if (stream.match(UNDERLINE)) {\n      stream.skipToEnd();\n      return 'link';\n    }\n\n    if (stream.match(SECTION)) {\n      stream.skipToEnd();\n      return 'ften-section';\n    }\n\n    if (stream.match(CENTERED_TEXT)) {\n      stream.skipToEnd();\n      state.blankLine = false;\n      state.character = false;\n      state.dialog = false;\n      state.parenthetical = false;\n      return 'ften-centered-text';\n    }\n\n    if ((state.character || state.dialog) && stream.match(PARENTHETICAL)) {\n      stream.skipToEnd();\n      state.blankLine = false;\n      state.character = false;\n      state.dialog = true;\n      state.parenthetical = true;\n      return 'variable-2 ften-parenthetical';\n    }\n    if (state.character || state.parenthetical) {\n      stream.skipToEnd();\n      state.blankLine = false;\n      state.character = false;\n      state.parenthetical = false;\n      state.dialog = true;\n      return 'string ften-dialog';\n    }\n    if (state.blankLine) {\n      if (stream.match(CHARACTER) && !isNextLineBlank(stream)) {\n        stream.skipToEnd();\n        state.blankLine = false;\n        state.character = true;\n        state.dialog = false;\n        state.parenthetical = false;\n        return 'keyword ften-character';\n      }\n\n      if (stream.match(TRANSITION) && isNextLineBlank(stream)) {\n        stream.skipToEnd();\n        state.blankLine = false;\n        state.character = false;\n        state.dialog = false;\n        state.parenthetical = false;\n        return 'line-ften-transition';\n      }\n    }\n    if (stream.match(SCENE_HEADING) && isNextLineBlank(stream)) {\n      stream.skipToEnd();\n      state.blankLine = false;\n      state.character = false;\n      state.dialog = false;\n      state.parenthetical = false;\n      return 'variable-2 line-ften-slugline';\n    }\n\n    stream.next();\n    return 'line-ften-action';\n  }\n  function blankLine(state) {\n    state.blankLine = true;\n  }\n\n  return {\n    startState,\n    token,\n    blankLine\n  };\n}\n","import React from \"react\"\nimport Editor from \"../components/editor.js\";\n\nexport default class ViewContainer extends React.Component {\n\n  render() {\n    console.log('view container render')\n    return (\n      <div className=\"view_container\">\n        <Editor\n          style={{ width: '100%' }}\n          onChange={this.props.onChange}\n          content={this.props.content}\n          onPreview={this.props.onPreview}\n          onDropboxSave={this.props.onDropboxSave}\n          onFileNameChange={this.props.onFileNameChange}\n          file={this.props.file}\n          onError={this.props.onError}\n          onInfo={this.props.onInfo} />\n      </div>\n    )\n  }\n}"],"sourceRoot":""}